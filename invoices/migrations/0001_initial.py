# Generated by Django 4.2.20 on 2025-07-01 11:02

from django.db import migrations, models
import django.db.models.deletion
import private_storage.fields
import private_storage.storage.files


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("shop", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Betrag"
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(max_length=255, verbose_name="Rechnungsnummer"),
                ),
                (
                    "invoice_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Rechnungsdatum"
                    ),
                ),
                (
                    "invoice_receipt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Rechnungseingang"
                    ),
                ),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[("s", "Storno"), ("i", "Rechnung")],
                        default="i",
                        max_length=1,
                        verbose_name="Rechnungsart",
                    ),
                ),
                (
                    "mail_sent_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Rechnungsversand"
                    ),
                ),
                (
                    "invoice_export",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Exportdatum"
                    ),
                ),
                (
                    "pdf",
                    private_storage.fields.PrivateFileField(
                        blank=True,
                        null=True,
                        storage=private_storage.storage.files.PrivateFileSystemStorage(),
                        upload_to="invoices/",
                    ),
                ),
                (
                    "pdf_export",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Pdf-Export"
                    ),
                ),
                (
                    "replacement_event",
                    models.CharField(
                        blank=True,
                        help_text="Zum Überschreiben des automatisch erzeugten Veranstaltungstitels. Funktioniert nur, wenn die Rechnung nur 1 NICHT STORNIERTE Veranstaltung enthält.",
                        max_length=255,
                        null=True,
                        verbose_name="Ersatzangabe Event Name",
                    ),
                ),
                (
                    "replacement_date",
                    models.CharField(
                        blank=True,
                        help_text="Zum Überschreiben des automatisch erzeugten Veranstaltungsdatums. Funktioniert nur, wenn die Rechnung nur 1 NICHT STORNIERTE Veranstaltung enthält.",
                        max_length=40,
                        null=True,
                        verbose_name="Ersatzangabe Event Datum",
                    ),
                ),
                (
                    "use_replacements",
                    models.BooleanField(
                        default=False,
                        help_text="Anklicken, um Ersatzangaben zu benutzen",
                        verbose_name="Ersatzangaben benutzen",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shop.order",
                    ),
                ),
                (
                    "storno_invoice",
                    models.OneToOneField(
                        blank=True,
                        limit_choices_to={"invoice_type": "s"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="original_invoice",
                        to="invoices.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rechnung",
                "verbose_name_plural": "Rechnungen",
                "ordering": ["-invoice_date"],
            },
        ),
        migrations.CreateModel(
            name="StandardInvoice",
            fields=[],
            options={
                "verbose_name": "Rechnung",
                "verbose_name_plural": "Rechnungen",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("invoices.invoice",),
        ),
        migrations.CreateModel(
            name="StornoInvoice",
            fields=[],
            options={
                "verbose_name": "Storno-Rechnung",
                "verbose_name_plural": "Storno-Rechnungen",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("invoices.invoice",),
        ),
    ]
